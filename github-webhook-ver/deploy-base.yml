---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy base resources for Chatbot"
Parameters:
  GitHubOwner:
    Type: String
    Description: "Github repository owner"
  GitHubRepo:
    Type: String
    Description: "GitHub Repository name"
  GitHubOAuthToken:
    Type: String
    Description: OAuthToken for GitHub Repository
    NoEcho: true
  WebhookSecret:
    Type: String
    Description: SecretToken for GitHub Webhook
    NoEcho: true
Resources:
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "chatbot-${AWS::AccountId}-${AWS::Region}"
  ECRRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "chatbot"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowCodeBuild
            Effect: Allow
            Principal:
              AWS: 
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
              Service:
                - "codebuild.amazonaws.com"
            Action:
                - "ecr:GetDownloadUrlForLayer"
                - "ecr:BatchGetImage"
                - "ecr:BatchCheckLayerAvailability"
  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: codebuild_service_role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
        - PolicyName: S3ForCodebuild
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                Resource:
                  - "arn:aws:s3:::chatbot*"
        - PolicyName: ECRPull
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                Resource: "*"
        - PolicyName: DeployLambda
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:AddPermission"
                  - "lambda:CreateFunction"
                  - "lambda:GetFunction"
                  - "lambda:GetFunctionConfiguration"
                  - "lambda:ListFunctions"
                  - "lambda:ListVersionsByFunction"
                  - "lambda:DeleteFunction"
                  - "lambda:GetAlias"
                  - "lambda:ListAliases"
                  - "lambda:CreateAlias"
                  - "lambda:UpdateAlias"
                  - "lambda:UpdateFunctionCode"
                  - "lambda:UpdateFunctionConfiguration"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/*"
  CodePipelineServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: codepipeline_service_role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"
        - PolicyName: S3ForCodepipeline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - "arn:aws:s3:::chatbot*"
  CodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: "chatbot"
      Description: "deploy chatbot resource"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/chatbot:latest"
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/codebuild_service_role"
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Version: 1.0
    Properties:
      Name: "chatbot"
      RestartExecutionOnUpdate: false
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                -
                  Name: SourceOutput
              Configuration:
                Owner: !Ref "GitHubOwner"
                Repo: !Ref "GitHubRepo"
                Branch: "master"
                PollForSourceChanges: "false"
                OAuthToken: !Ref "GitHubOAuthToken"
        -
          Name: Deploy
          Actions:
            -
              Name: CodeBuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                -
                  Name: SourceOutput
              Configuration:
                ProjectName: !Ref "CodeBuild"
      ArtifactStore:
        Type: S3
        Location: !Ref "S3Bucket"
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/codepipeline_service_role"
  CodePipelineWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref "WebhookSecret"
      Filters:
        - 
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: SourceAction
      Name: PipelineWebhook
      TargetPipelineVersion: !GetAtt CodePipeline.Version
      RegisterWithThirdParty: true