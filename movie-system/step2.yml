---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Step2 - S3, Lambda, DynamoDB"
Resources:
  TriggerLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "put_dynamo_lambda_role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
  TriggerLambdaRolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "movie_list_put_item_access"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: 
              - "dynamodb:PutItem"
            Resource: "*"
      Roles:
        - Ref: "TriggerLambdaRole"
  TriggerLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: "put_dynamo_db"
      Description: "put items to DynamoDB"
      Handler: "index.handler"
      MemorySize: 128
      Runtime: "nodejs8.10"
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/put_dynamo_lambda_role"
      Timeout: 5
      Code:
        S3Bucket: "sample-code-movie-system"
        S3Key: "put-dynamo.zip"
  TriggerLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt 
        - TriggerLambda
        - Arn
      Principal: "s3.amazonaws.com"
      SourceArn: !Join 
                  - ""
                  - - "arn:aws:s3:::"
                    - !Sub "dist-movie-source-${AWS::AccountId}"
  DistS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "dist-movie-source-${AWS::AccountId}"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  - Name: "suffix"
                    Value: "_hls.m3u8"
            Function: !GetAtt 
              - TriggerLambda
              - Arn
  MovieListDb:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "Name"
          AttributeType: "S"
      BillingMode: "PAY_PER_REQUEST"
      KeySchema:
        -
          AttributeName: "Name"
          KeyType: "HASH"
      TableName: "movie_list"